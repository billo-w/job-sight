name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ./
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Security scan (Bandit)
        run: bandit -r app.py
      - name: Build image
        run: docker build -t job-sight:test .
      - name: Scan Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: job-sight:test
      - name: Run tests with coverage
        run: |
          pytest --maxfail=1 --disable-warnings --cov=app --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      # DO App Platform vars
      TF_VAR_do_token:       ${{ secrets.DO_TOKEN }}
      TF_VAR_github_repo:    ${{ github.repository }}
      # Spaces remote‚Äêstate credentials
      AWS_ACCESS_KEY_ID:     ${{ secrets.SPACES_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_KEY }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.0'

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -reconfigure

      - name: Terraform Plan & Apply
        working-directory: terraform
        run: |
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan